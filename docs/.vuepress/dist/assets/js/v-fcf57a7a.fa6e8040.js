"use strict";(self.webpackChunktreasure_chest=self.webpackChunktreasure_chest||[]).push([[951],{1:(n,a,s)=>{s.r(a),s.d(a,{data:()=>t});const t={key:"v-fcf57a7a",path:"/Spring-IoC.html",title:"Spring IoC 总结",lang:"en-US",frontmatter:{title:"Spring IoC 总结",date:"2018-05-27T15:51:53.000Z",categories:["Notes"],tags:["Java","Spring"]},excerpt:"<p><strong>Spring 三种ApplicationContext</strong></p>\n<ul>\n<li><code>AnnotationConfigApplicationContext</code> 通过注解配置来加载 Spring 上下文，使用方式：<code>ApplicationContext c = new AnnotationConfigApplicationContext(ContextConfig.class);</code></li>\n<li><code>ClassPathXmlApplicationContext</code> 通过 XML 加载 Spring 上下文方式：<code>ApplicationContext ctx = new ClassPathXmlApplicationContext(&quot;applicationContext.xml&quot;);</code></li>\n<li><code>FileSystemXmlApplicationContext</code> 和 <code>ClassPathXmlApplicationContext</code> 非常类似，只是这里的配置文件可以位于整个文件系统中任意位置</li>\n</ul>\n",headers:[{level:2,title:"一、装配 Bean",slug:"一、装配-bean",children:[{level:3,title:"1.1 Spring Bean 配置方案",slug:"_1-1-spring-bean-配置方案",children:[]},{level:3,title:"#1.2 自动化装配 Bean",slug:"_1-2-自动化装配-bean",children:[]},{level:3,title:"#1.3通过 Java 代码装配 Bean",slug:"_1-3通过-java-代码装配-bean",children:[]},{level:3,title:"#1.4通过 XML 代码装配 Bean",slug:"_1-4通过-xml-代码装配-bean",children:[]},{level:3,title:"#1.5 混合配置",slug:"_1-5-混合配置",children:[]}]},{level:2,title:"二、高级装配",slug:"二、高级装配",children:[{level:3,title:"#2.1 环境与 profile",slug:"_2-1-环境与-profile",children:[]},{level:3,title:"#2.2 条件化的 Bean",slug:"_2-2-条件化的-bean",children:[]},{level:3,title:"#2.3 处理自动装配的歧义",slug:"_2-3-处理自动装配的歧义",children:[]},{level:3,title:"#2.4 Bean 的作用域",slug:"_2-4-bean-的作用域",children:[]},{level:3,title:"#2.5 运行时值注入",slug:"_2-5-运行时值注入",children:[]}]}],filePathRelative:"Spring-IoC.md",git:{updatedTime:null,contributors:[]}}},293:(n,a,s)=>{s.r(a),s.d(a,{default:()=>e});const t=(0,s(252).uE)('<p><strong>Spring 三种ApplicationContext</strong></p><ul><li><code>AnnotationConfigApplicationContext</code> 通过注解配置来加载 Spring 上下文，使用方式：<code>ApplicationContext c = new AnnotationConfigApplicationContext(ContextConfig.class);</code></li><li><code>ClassPathXmlApplicationContext</code> 通过 XML 加载 Spring 上下文方式：<code>ApplicationContext ctx = new ClassPathXmlApplicationContext(&quot;applicationContext.xml&quot;);</code></li><li><code>FileSystemXmlApplicationContext</code> 和 <code>ClassPathXmlApplicationContext</code> 非常类似，只是这里的配置文件可以位于整个文件系统中任意位置</li></ul><h2 id="一、装配-bean" tabindex="-1"><a class="header-anchor" href="#一、装配-bean" aria-hidden="true">#</a> 一、装配 Bean</h2><h3 id="_1-1-spring-bean-配置方案" tabindex="-1"><a class="header-anchor" href="#_1-1-spring-bean-配置方案" aria-hidden="true">#</a> 1.1 Spring Bean 配置方案</h3><ul><li>在 <em>XML</em> 中进行显式配置</li><li>在 <em>Java</em> 中进行显式配置</li><li>隐式的 <em>Bean</em> 发现机制和自动装配</li></ul><h3 id="_1-2-自动化装配-bean" tabindex="-1"><a class="header-anchor" href="#_1-2-自动化装配-bean" aria-hidden="true">#</a> #1.2 自动化装配 <em>Bean</em></h3><ul><li>组件扫描</li><li>自动装配</li></ul><h4 id="_1-2-1-创建可发现-bean-并自动扫描" tabindex="-1"><a class="header-anchor" href="#_1-2-1-创建可发现-bean-并自动扫描" aria-hidden="true">#</a> ##1.2.1 创建可发现 <em>Bean</em> 并自动扫描</h4><ul><li><code>@Component</code> 标注一个普通的 Spring Bean 类（可以指定 <em>Bean</em> 名称，未指定时默认为小写字母开头的类名）</li></ul><blockquote><p><code>@Named(&#39;bean名称&#39;)</code> 是 Java 依赖注入规范提供的注解，有一些细微的差异，但是大多数场景可以相互替换。但是 <code>@Component</code> 语义更明确</p></blockquote><ul><li><code>@Controller</code> 标注一个控制器类</li><li><code>@Service</code> 标注一个业务逻辑类</li><li><code>@Repository</code> 标注一个DAO类</li></ul><p><strong>在 Java 中配置自动扫描</strong></p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token annotation punctuation">@Configuration</span> \n<span class="token annotation punctuation">@ComponentScan</span> \n<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">BeanConfig</span> <span class="token punctuation">{</span>\n\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><ul><li><code>@ComponentScan(&quot;soundsystem&quot;)</code></li><li><code>@ComponentScan(basePackages=&quot;soundsystem&quot;)</code></li><li><code>@ComponentScan(basePackages={&quot;soundsystem&quot;, &quot;video&quot;})</code></li><li><code>@ComponentScan(basePackageClasses={CDPlayer.class, DVDPlayer.class})</code> 这些类所在的包将会作为组件扫描的基础包</li></ul><p><strong>在 XML 中配置自动扫描</strong></p><div class="language-xml ext-xml line-numbers-mode"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token namespace">context:</span>component-scan</span> <span class="token attr-name">base-package</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>soundsystem<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h4 id="_1-2-2-实现自动装配" tabindex="-1"><a class="header-anchor" href="#_1-2-2-实现自动装配" aria-hidden="true">#</a> ##1.2.2 实现自动装配</h4><ul><li>使用 <code>@Autowired</code> 进行自动装配</li><li>使用 <code>@Autowired(required = false)</code> 在没有匹配的 bean 的时候，会使这个 bean 处于未装配状态</li><li><code>@Inject</code> 属于 Java 依赖注入规范，也能用来自动装配；和 <code>@Autowired</code> 有一些细微的区别，但是大多数场景可以互换使用</li></ul><h3 id="_1-3通过-java-代码装配-bean" tabindex="-1"><a class="header-anchor" href="#_1-3通过-java-代码装配-bean" aria-hidden="true">#</a> #1.3通过 Java 代码装配 <em>Bean</em></h3><h4 id="_1-3-1-创建配置类" tabindex="-1"><a class="header-anchor" href="#_1-3-1-创建配置类" aria-hidden="true">#</a> ##1.3.1 创建配置类</h4><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token annotation punctuation">@Configuration</span> \n<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">BeanConfig</span> <span class="token punctuation">{</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h4 id="_1-3-2-声明简单的-bean" tabindex="-1"><a class="header-anchor" href="#_1-3-2-声明简单的-bean" aria-hidden="true">#</a> ##1.3.2 声明简单的 <em>Bean</em></h4><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token annotation punctuation">@Bean</span> \n<span class="token keyword">public</span> <span class="token class-name">CompactDisc</span> <span class="token function">sgtPeppers</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> \n    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">SgtPeppers</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> \n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><blockquote><p>该 <em>Bean</em> 默认名称就是方法名</p></blockquote><p>也可以指定 <em>Bean</em> 名称</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token annotation punctuation">@Bean</span><span class="token punctuation">(</span>name<span class="token operator">=</span><span class="token string">&quot;lonelyHeartsClubBand&quot;</span><span class="token punctuation">)</span>\n<span class="token keyword">public</span> <span class="token class-name">CompactDisc</span> <span class="token function">sgtPeppers</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> \n    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">SgtPeppers</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> \n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h3 id="_1-4通过-xml-代码装配-bean" tabindex="-1"><a class="header-anchor" href="#_1-4通过-xml-代码装配-bean" aria-hidden="true">#</a> #1.4通过 XML 代码装配 <em>Bean</em></h3><h4 id="_1-4-1-声明一个简单的-bean" tabindex="-1"><a class="header-anchor" href="#_1-4-1-声明一个简单的-bean" aria-hidden="true">#</a> ##1.4.1 声明一个简单的 <code>&lt;bean&gt;</code></h4><div class="language-xml ext-xml line-numbers-mode"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>bean</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>soundsystem.SgtPeppers<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><blockquote><p>默认 <code>id</code> 为 ``soundsystem.SgtPeppers#0<code>，其中 </code>#0` 是计数形式，用于区分同类型其他 <em>Bean</em></p></blockquote><p>指定 <code>id</code></p><div class="language-xml ext-xml line-numbers-mode"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>bean</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>compactDisc<span class="token punctuation">&quot;</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>soundsystem.SgtPeppers<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h4 id="_1-4-2-借助构造器注入初始化-bean" tabindex="-1"><a class="header-anchor" href="#_1-4-2-借助构造器注入初始化-bean" aria-hidden="true">#</a> ##1.4.2 借助构造器注入初始化 <em>Bean</em></h4><div class="language-xml ext-xml line-numbers-mode"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>bean</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>cdPlayer<span class="token punctuation">&quot;</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>soundsystem.CDPlayer<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span> \n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>constructor-arg</span> <span class="token attr-name">ref</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>compactDisc<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span> \n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>bean</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><blockquote><p>备选使用 <code>c</code> 命名空间</p></blockquote><p><strong>传入集合元素</strong></p><div class="language-xml ext-xml line-numbers-mode"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>bean</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>cdPlayer<span class="token punctuation">&quot;</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>soundsystem.CDPlayer<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span> \n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>constructor-arg</span><span class="token punctuation">&gt;</span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>list</span><span class="token punctuation">&gt;</span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>value</span><span class="token punctuation">&gt;</span></span>Hello World!<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>value</span><span class="token punctuation">&gt;</span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>value</span><span class="token punctuation">&gt;</span></span>Test<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>value</span><span class="token punctuation">&gt;</span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>list</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>constructor-arg</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>bean</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><div class="language-xml ext-xml line-numbers-mode"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>bean</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>cdPlayer<span class="token punctuation">&quot;</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>soundsystem.CDPlayer<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span> \n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>constructor-arg</span><span class="token punctuation">&gt;</span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>list</span><span class="token punctuation">&gt;</span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ref</span> <span class="token attr-name">bean</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>animalImpl<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ref</span> <span class="token attr-name">bean</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>foodImpl<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ref</span> <span class="token attr-name">bean</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>performanceImpl<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ref</span> <span class="token attr-name">bean</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>personImpl<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>list</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>constructor-arg</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>bean</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><blockquote><p><code>set</code> 元素同理，但是都不能用于 <code>c</code> 命名空间</p></blockquote><h4 id="_1-4-3-设置属性" tabindex="-1"><a class="header-anchor" href="#_1-4-3-设置属性" aria-hidden="true">#</a> ##1.4.3 设置属性</h4><div class="language-xml ext-xml line-numbers-mode"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>bean</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>cdPlayer<span class="token punctuation">&quot;</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>soundsystem.CDPlayer<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span> \n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>compactDisc<span class="token punctuation">&quot;</span></span> <span class="token attr-name">ref</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>compactDisc<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span> \n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>bean</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><blockquote><p>备选使用 <code>p</code> 命名空间</p></blockquote><p><strong>传入集合元素</strong></p><div class="language-xml ext-xml line-numbers-mode"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>bean</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>cdPlayer<span class="token punctuation">&quot;</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>soundsystem.CDPlayer<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span> \n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>compactDisc<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>list</span><span class="token punctuation">&gt;</span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>value</span><span class="token punctuation">&gt;</span></span>Hello World!<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>value</span><span class="token punctuation">&gt;</span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>value</span><span class="token punctuation">&gt;</span></span>Test<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>value</span><span class="token punctuation">&gt;</span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>list</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>bean</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><div class="language-xml ext-xml line-numbers-mode"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>bean</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>cdPlayer<span class="token punctuation">&quot;</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>soundsystem.CDPlayer<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span> \n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>compactDisc<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>list</span><span class="token punctuation">&gt;</span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ref</span> <span class="token attr-name">bean</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>animalImpl<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ref</span> <span class="token attr-name">bean</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>foodImpl<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ref</span> <span class="token attr-name">bean</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>performanceImpl<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ref</span> <span class="token attr-name">bean</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>personImpl<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>list</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>bean</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><blockquote><p><code>set</code> 元素同理，但是都不能用于 <code>p</code> 命名空间</p></blockquote><h4 id="_1-4-4-使用-util" tabindex="-1"><a class="header-anchor" href="#_1-4-4-使用-util" aria-hidden="true">#</a> ##1.4.4 使用 <code>&lt;util:*&gt;</code></h4><p>使用 <code>&lt;util:*&gt;</code> 创建单独的 <em>Bean</em></p><table><thead><tr><th>元素</th><th>描述</th></tr></thead><tbody><tr><td><code>&lt;util:constant&gt;</code></td><td>引用某个类型的 <code>public static</code> 域，并将其暴露为 <em>Bean</em></td></tr><tr><td><code>&lt;util:list&gt;</code></td><td>创建一个 <code>java.util.List</code> 类型的 <em>Bean</em>，其中包含值或引用</td></tr><tr><td><code>&lt;util:map&gt;</code></td><td>创建一个 <code>java.util.Map</code> 类型 的 <em>Bean</em>，其中包含值或引用</td></tr><tr><td><code>&lt;util:properties&gt;</code></td><td>创建一个 <code>java.util.Properties</code> 类型的 <em>Bean</em></td></tr><tr><td><code>&lt;util:property-path&gt;</code></td><td>引用一个 <em>Bean</em> 的属性（或内嵌属性），并将其暴露为 <em>Bean</em></td></tr><tr><td><code>&lt;util:set&gt;</code></td><td>创建一个 <code>java.util.Set</code> 类型的 <em>Bean</em>，其中包含值或引用</td></tr></tbody></table><div class="language-xml ext-xml line-numbers-mode"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token namespace">util:</span>list</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>test<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>value</span><span class="token punctuation">&gt;</span></span>Hello World!<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>value</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>value</span><span class="token punctuation">&gt;</span></span>Test<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>value</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token namespace">util:</span>list</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h3 id="_1-5-混合配置" tabindex="-1"><a class="header-anchor" href="#_1-5-混合配置" aria-hidden="true">#</a> #1.5 混合配置</h3><h4 id="_1-5-1-在-javaconfig-中引用-xml-配置" tabindex="-1"><a class="header-anchor" href="#_1-5-1-在-javaconfig-中引用-xml-配置" aria-hidden="true">#</a> ##1.5.1 在 JavaConfig 中引用 XML 配置</h4><ul><li>拆分 JavaConfig 并引入</li></ul><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token annotation punctuation">@Configuration</span>\n<span class="token annotation punctuation">@Import</span><span class="token punctuation">(</span><span class="token class-name">OtherConfig</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span>\n<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">TestConfig</span> <span class="token punctuation">{</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><ul><li>创建一个更高级别的 JavaConfig ，只组合 JavaConfig</li></ul><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token annotation punctuation">@Configuration</span>\n<span class="token annotation punctuation">@Import</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token class-name">OtherConfig</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> <span class="token class-name">TestConfig</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">}</span><span class="token punctuation">)</span>\n<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Test</span> <span class="token punctuation">{</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><ul><li>引入 XML 配置文件</li></ul><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token annotation punctuation">@Configuration</span>\n<span class="token annotation punctuation">@Import</span><span class="token punctuation">(</span><span class="token class-name">TestConfig</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span>\n<span class="token annotation punctuation">@ImportResource</span><span class="token punctuation">(</span><span class="token string">&quot;classpath:test-config.xml&quot;</span><span class="token punctuation">)</span>\n<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">OtherConfig</span> <span class="token punctuation">{</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h4 id="_1-5-2-在-xml-配置中引用-javaconfig" tabindex="-1"><a class="header-anchor" href="#_1-5-2-在-xml-配置中引用-javaconfig" aria-hidden="true">#</a> ##1.5.2 在 XML 配置中引用 JavaConfig</h4><ul><li>拆分 xml 配置文件，并引入</li></ul><div class="language-xml ext-xml line-numbers-mode"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>import</span> <span class="token attr-name">resource</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>cd-config.xml<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><ul><li>在 xml 中引入 JavaConfig</li></ul><div class="language-xml ext-xml line-numbers-mode"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>bean</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>JavaConfig<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h2 id="二、高级装配" tabindex="-1"><a class="header-anchor" href="#二、高级装配" aria-hidden="true">#</a> 二、高级装配</h2><h3 id="_2-1-环境与-profile" tabindex="-1"><a class="header-anchor" href="#_2-1-环境与-profile" aria-hidden="true">#</a> #2.1 环境与 profile</h3><h4 id="_2-1-1-配置不同环境的配置" tabindex="-1"><a class="header-anchor" href="#_2-1-1-配置不同环境的配置" aria-hidden="true">#</a> ##2.1.1 配置不同环境的配置</h4><p>##在 JavaConfig 中配置</p><ul><li>创建不同环境的 <em>Configuration</em>，类级别</li></ul><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token annotation punctuation">@Configuration</span>\n<span class="token annotation punctuation">@Profile</span><span class="token punctuation">(</span><span class="token string">&quot;dev&quot;</span><span class="token punctuation">)</span>\n<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">TestConfig</span> <span class="token punctuation">{</span>\n    <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>\n<span class="token punctuation">}</span>\n\n<span class="token annotation punctuation">@Configuration</span>\n<span class="token annotation punctuation">@Profile</span><span class="token punctuation">(</span><span class="token string">&quot;prod&quot;</span><span class="token punctuation">)</span>\n<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ProdConfig</span> <span class="token punctuation">{</span>\n    <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><ul><li>创建方法级别的配置环境</li></ul><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token annotation punctuation">@Configuration</span>\n<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">TestConfig</span> <span class="token punctuation">{</span>\n\n    <span class="token annotation punctuation">@Bean</span>\n    <span class="token annotation punctuation">@Profile</span><span class="token punctuation">(</span><span class="token string">&quot;dev&quot;</span><span class="token punctuation">)</span>\n    <span class="token keyword">public</span> <span class="token class-name">AnimalImpl</span> <span class="token function">devConfig</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n\n    <span class="token punctuation">}</span>\n\n    <span class="token annotation punctuation">@Bean</span>\n    <span class="token annotation punctuation">@Profile</span><span class="token punctuation">(</span><span class="token string">&quot;prod&quot;</span><span class="token punctuation">)</span>\n    <span class="token keyword">public</span> <span class="token class-name">Animal</span> <span class="token function">prod</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n        \n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br></div></div><p>##在 XML 中配置</p><ul><li>直接在 XML 根节点配置</li></ul><div class="language-xml ext-xml line-numbers-mode"><pre class="language-xml"><code><span class="token prolog">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>beans</span> <span class="token attr-name">xmlns</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>http://www.springframework.org/schema/beans<span class="token punctuation">&quot;</span></span>\n        <span class="token attr-name"><span class="token namespace">xmlns:</span>xsi</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>http://www.w3.org/2001/XMLSchema-instance<span class="token punctuation">&quot;</span></span>\n        <span class="token attr-name"><span class="token namespace">xsi:</span>schemaLocation</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd<span class="token punctuation">&quot;</span></span>\n        <span class="token attr-name">profile</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>dev<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\n\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>bean</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>animalImpl<span class="token punctuation">&quot;</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>com.exercise.test.aspect.component.AnimalImpl<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span>\n\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>beans</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><ul><li>嵌套 <code>&lt;beans&gt;</code> 进行配置</li></ul><div class="language-xml ext-xml line-numbers-mode"><pre class="language-xml"><code><span class="token prolog">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>beans</span> <span class="token attr-name">xmlns</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>http://www.springframework.org/schema/beans<span class="token punctuation">&quot;</span></span>\n        <span class="token attr-name"><span class="token namespace">xmlns:</span>xsi</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>http://www.w3.org/2001/XMLSchema-instance<span class="token punctuation">&quot;</span></span>\n        <span class="token attr-name"><span class="token namespace">xsi:</span>schemaLocation</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>beans</span> <span class="token attr-name">profile</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>dev<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\n\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>beans</span><span class="token punctuation">&gt;</span></span>\n\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>beans</span> <span class="token attr-name">profile</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>prod<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\n        \n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>beans</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>beans</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><h4 id="_2-1-2-激活配置" tabindex="-1"><a class="header-anchor" href="#_2-1-2-激活配置" aria-hidden="true">#</a> ##2.1.2 激活配置</h4><p>激活 <em>profile</em> 有两个属性：</p><ul><li><code>spring.profiles.active</code></li><li><code>spring.profiles.default</code></li></ul><p>如果 <code>spring.profiles.active</code> 设置值，则由其激活相应的配置，否则查找 <code>spring.profiles.default</code> 值</p><ul><li>在 <code>web.xm</code> 中配置默认 <em>profile</em></li></ul><div class="language-xml ext-xml line-numbers-mode"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>servlet</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>init-param</span><span class="token punctuation">&gt;</span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>param-name</span><span class="token punctuation">&gt;</span></span>spring.profiles.default<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>param-name</span><span class="token punctuation">&gt;</span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>param-value</span><span class="token punctuation">&gt;</span></span>dev<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>param-value</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>init-param</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>servlet</span><span class="token punctuation">&gt;</span></span>\n\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>context-param</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>param-name</span><span class="token punctuation">&gt;</span></span>spring.profiles.default<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>param-name</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>param-value</span><span class="token punctuation">&gt;</span></span>dev<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>param-value</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>context-param</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><ul><li>在单元测试中，使用 <code>@ActiveProfiles(&quot;dev&quot;)</code> 激活环境</li></ul><h3 id="_2-2-条件化的-bean" tabindex="-1"><a class="header-anchor" href="#_2-2-条件化的-bean" aria-hidden="true">#</a> #2.2 条件化的 <em>Bean</em></h3><p>使用 <code>@Conditional</code> 注解，根据计算结果，如果是 <code>true</code> 则实例化 <em>Bean</em>，如果是 <code>false</code>，则忽略<br></p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token annotation punctuation">@Bean</span>\n<span class="token annotation punctuation">@Conditional</span><span class="token punctuation">(</span><span class="token class-name">MagicExistsCondition</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span>\n<span class="token keyword">public</span> <span class="token class-name">MagicBean</span> <span class="token function">magicBean</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">MagicBean</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p><code>@Conditional</code> 接受实现 <code>Condition</code> 接口的类作为参数；<code>Condition</code> 接口只有一个 <code>matches</code> 方法<br></p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MagicExistsCondition</span> <span class="token keyword">implements</span> <span class="token class-name">Condition</span> <span class="token punctuation">{</span>\n\n    <span class="token annotation punctuation">@Override</span>\n    <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">matches</span><span class="token punctuation">(</span><span class="token class-name">ConditionContext</span> context<span class="token punctuation">,</span> <span class="token class-name">AnnotatedTypeMetadata</span> metadata<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token class-name">Environment</span> env <span class="token operator">=</span> context<span class="token punctuation">.</span><span class="token function">getEnvironment</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token keyword">return</span> env<span class="token punctuation">.</span><span class="token function">containsProperty</span><span class="token punctuation">(</span><span class="token string">&quot;magic&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><p><code>ConditionContext</code> 接口内容</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">ConditionContext</span> <span class="token punctuation">{</span>\n\n\t<span class="token class-name">BeanDefinitionRegistry</span> <span class="token function">getRegistry</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n\t<span class="token class-name">ConfigurableListableBeanFactory</span> <span class="token function">getBeanFactory</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n\t<span class="token class-name">Environment</span> <span class="token function">getEnvironment</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n\t<span class="token class-name">ResourceLoader</span> <span class="token function">getResourceLoader</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n    <span class="token class-name">ClassLoader</span> <span class="token function">getClassLoader</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><table><thead><tr><th>参数</th><th>作用</th></tr></thead><tbody><tr><td><code>BeanDefinitionRegistry</code></td><td>检查 <em>Bean</em> 定义</td></tr><tr><td><code>ConfigurableListableBeanFactory</code></td><td>检查是 <em>Bean</em> 是否存在，甚至探查 <em>Bean</em> 属性</td></tr><tr><td><code>Environment</code></td><td>检查环境变量是否存在以及它的值</td></tr><tr><td><code>ResourceLoader</code></td><td>加载的资源</td></tr><tr><td><code>ClassLoader</code></td><td>加载并检查类是否存在</td></tr></tbody></table><p><code>AnnotatedTypeMetadata</code> 接口内容</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">AnnotatedTypeMetadata</span> <span class="token punctuation">{</span>\n    <span class="token keyword">boolean</span> <span class="token function">isAnnotated</span><span class="token punctuation">(</span><span class="token class-name">String</span> var1<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n    <span class="token annotation punctuation">@Nullable</span>\n    <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">&gt;</span></span> <span class="token function">getAnnotationAttributes</span><span class="token punctuation">(</span><span class="token class-name">String</span> var1<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n    <span class="token annotation punctuation">@Nullable</span>\n    <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">&gt;</span></span> <span class="token function">getAnnotationAttributes</span><span class="token punctuation">(</span><span class="token class-name">String</span> var1<span class="token punctuation">,</span> <span class="token keyword">boolean</span> var2<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n    <span class="token annotation punctuation">@Nullable</span>\n    <span class="token class-name">MultiValueMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">&gt;</span></span> <span class="token function">getAllAnnotationAttributes</span><span class="token punctuation">(</span><span class="token class-name">String</span> var1<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n    <span class="token annotation punctuation">@Nullable</span>\n    <span class="token class-name">MultiValueMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">&gt;</span></span> <span class="token function">getAllAnnotationAttributes</span><span class="token punctuation">(</span><span class="token class-name">String</span> var1<span class="token punctuation">,</span> <span class="token keyword">boolean</span> var2<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br></div></div><h3 id="_2-3-处理自动装配的歧义" tabindex="-1"><a class="header-anchor" href="#_2-3-处理自动装配的歧义" aria-hidden="true">#</a> #2.3 处理自动装配的歧义</h3><h4 id="_2-3-1-标记首选的-bean" tabindex="-1"><a class="header-anchor" href="#_2-3-1-标记首选的-bean" aria-hidden="true">#</a> ##2.3.1 标记首选的 <em>Bean</em></h4><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token annotation punctuation">@Component</span> \n<span class="token annotation punctuation">@Primary</span> \n<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">IceCream</span> <span class="token keyword">implements</span> <span class="token class-name">Dessert</span> <span class="token punctuation">{</span> \n    <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span> \n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token annotation punctuation">@Bean</span> \n<span class="token annotation punctuation">@Primary</span> \n<span class="token keyword">public</span> <span class="token class-name">Dessert</span> <span class="token function">iceCream</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> \n    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">IceCream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> \n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><div class="language-xml ext-xml line-numbers-mode"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>bean</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>iceCream<span class="token punctuation">&quot;</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>com.desserteater.IceCream<span class="token punctuation">&quot;</span></span> <span class="token attr-name">primary</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>true<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h4 id="_2-3-2-限定自动装配的-bean" tabindex="-1"><a class="header-anchor" href="#_2-3-2-限定自动装配的-bean" aria-hidden="true">#</a> ##2.3.2 限定自动装配的 <em>Bean</em></h4><p><code>@Qualifier</code> 注解是使用限定符的主要方式，可以与 <code>@Autowired</code> 和 <code>@Inject</code> 协同使用，在注入时指定的 <em>Bean</em></p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token annotation punctuation">@Autowired</span> \n<span class="token annotation punctuation">@Qualifier</span><span class="token punctuation">(</span><span class="token string">&quot;iceCream&quot;</span><span class="token punctuation">)</span> \n<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setDessert</span><span class="token punctuation">(</span> <span class="token class-name">Dessert</span> dessert<span class="token punctuation">)</span> <span class="token punctuation">{</span> \n    <span class="token keyword">this</span><span class="token punctuation">.</span> dessert <span class="token operator">=</span> dessert<span class="token punctuation">;</span> \n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p><strong>创建自定义限定符</strong></p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token annotation punctuation">@Component</span> \n<span class="token annotation punctuation">@Qualifier</span><span class="token punctuation">(</span><span class="token string">&quot;cold&quot;</span><span class="token punctuation">)</span> \n<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">IceCream</span> <span class="token keyword">implements</span> <span class="token class-name">Dessert</span> <span class="token punctuation">{</span> \n    <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span> \n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token annotation punctuation">@Bean</span> \n<span class="token annotation punctuation">@Qualifier</span><span class="token punctuation">(</span><span class="token string">&quot;cold&quot;</span><span class="token punctuation">)</span> \n<span class="token keyword">public</span> <span class="token class-name">Dessert</span> <span class="token function">iceCream</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> \n    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">IceCream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> \n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p><strong>创建自定义限定符注解</strong></p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token annotation punctuation">@Target</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n        <span class="token class-name">ElementType</span><span class="token punctuation">.</span>CONSTRUCTOR<span class="token punctuation">,</span>\n        <span class="token class-name">ElementType</span><span class="token punctuation">.</span>FIELD<span class="token punctuation">,</span>\n        <span class="token class-name">ElementType</span><span class="token punctuation">.</span>METHOD<span class="token punctuation">,</span>\n        <span class="token class-name">ElementType</span><span class="token punctuation">.</span>TYPE<span class="token punctuation">}</span><span class="token punctuation">)</span>\n<span class="token annotation punctuation">@Retention</span><span class="token punctuation">(</span><span class="token class-name">RetentionPolicy</span><span class="token punctuation">.</span>RUNTIME<span class="token punctuation">)</span>\n<span class="token annotation punctuation">@Qualifier</span>\n<span class="token keyword">public</span> <span class="token annotation punctuation">@interface</span> <span class="token class-name">Code</span> <span class="token punctuation">{</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><p>使用自定义注解</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token annotation punctuation">@Component</span> \n<span class="token annotation punctuation">@Cold</span> \n<span class="token annotation punctuation">@Creamy</span> \n<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">IceCream</span> <span class="token keyword">implements</span> <span class="token class-name">Dessert</span> <span class="token punctuation">{</span> <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span> <span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token annotation punctuation">@Autowired</span> \n<span class="token annotation punctuation">@Cold</span> \n<span class="token annotation punctuation">@Creamy</span> \n<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setDessert</span><span class="token punctuation">(</span> <span class="token class-name">Dessert</span> dessert<span class="token punctuation">)</span> <span class="token punctuation">{</span> \n    <span class="token keyword">this</span><span class="token punctuation">.</span> dessert <span class="token operator">=</span> dessert<span class="token punctuation">;</span> \n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><h3 id="_2-4-bean-的作用域" tabindex="-1"><a class="header-anchor" href="#_2-4-bean-的作用域" aria-hidden="true">#</a> #2.4 <em>Bean</em> 的作用域</h3><p>Spring 作用域：</p><ul><li>单例（<code>Singleton</code>）：在整个应用中，只创建 <code>Bean</code> 的一个实例（默认）。</li><li>原型（<code>Prototype</code>）：每次注入或者通过 Spring 应用上下文获取的时候， 都会创建一个新的 <code>Bean</code> 实例。</li><li>会话（<code>Session</code>）：在 Web 应用中，为每个会话创建一个 <code>Bean</code> 实例。</li><li>请求（<code>Rquest</code>）：在 Web 应用中，为每个请求创建一个 <code>Bean</code> 实例。</li></ul><p>用法</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token annotation punctuation">@Component</span> \n<span class="token annotation punctuation">@Scope</span><span class="token punctuation">(</span><span class="token class-name">ConfigurableBeanFactory</span><span class="token punctuation">.</span>SCOPE_PROTOTYPE<span class="token punctuation">)</span> \n<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Notepad</span> <span class="token punctuation">{</span> <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span> <span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token annotation punctuation">@Bean</span> \n<span class="token annotation punctuation">@Scope</span><span class="token punctuation">(</span><span class="token class-name">ConfigurableBeanFactory</span><span class="token punctuation">.</span>SCOPE_PROTOTYPE<span class="token punctuation">)</span> \n<span class="token keyword">public</span> <span class="token class-name">Notepad</span> <span class="token function">notepad</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> \n    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Notepad</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> \n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><div class="language-xml ext-xml line-numbers-mode"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>bean</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>notepad<span class="token punctuation">&quot;</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>com.myapp.Notepad<span class="token punctuation">&quot;</span></span> <span class="token attr-name">scope</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>prototype<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p><strong>使用会话和请求作用域</strong></p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token annotation punctuation">@Component</span> \n<span class="token annotation punctuation">@Scope</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token class-name">WebApplicationContext</span><span class="token punctuation">.</span>SCOPE_SESSION<span class="token punctuation">,</span> \n        proxyMode<span class="token operator">=</span> <span class="token class-name">ScopedProxyMode</span><span class="token punctuation">.</span> INTERFACES<span class="token punctuation">)</span> \n<span class="token keyword">public</span> <span class="token class-name">ShoppingCart</span> <span class="token function">cart</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span> <span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token annotation punctuation">@Component</span> \n<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">StoreService</span> <span class="token punctuation">{</span> \n\n    <span class="token annotation punctuation">@Autowired</span> \n    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setShoppingCart</span><span class="token punctuation">(</span><span class="token class-name">ShoppingCart</span> shoppingCart<span class="token punctuation">)</span> <span class="token punctuation">{</span> \n        <span class="token keyword">this</span><span class="token punctuation">.</span> shoppingCart <span class="token operator">=</span> shoppingCart<span class="token punctuation">;</span> \n    <span class="token punctuation">}</span> \n\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><p><code>WebApplicationContext.SCOPE_SESSION</code> 会告诉 Spring 为 web 应用中的每个会话创建一个 <code>ShoppingCart</code>，会创建多个 <code>ShoppingCart</code> <em>Bean</em> 实例，但是对于每个会话只有一个实例，相当于对于当前会话是单例的。<br></p><p><code>StoreService</code> <em>Bean</em> 是一个单例的 <em>Bean</em>，会在 Spring 应用上下文加载的时候创建，在它创建时，Spring 会尝试将 <code>ShoppingCart</code> 注入，但是 <code>ShoppingCart</code> <em>Bean</em> 是会话作用域，此时并不存在，直到用户进入系统，创建会话，才有 <code>StoreService</code> 实例。<br></p><p>而且系统会存在多个 <code>ShoppingCart</code>，每个用户一个。 并不想让 Spring 注入某个固定的 <code>ShoppingCart</code> 实例到 <code>StoreService</code> 中。只希望使用的 <code>ShoppingCart</code> 实例恰好是当前会话所对应的那一个。<br></p><p>设置 <code>proxyMode</code> 不会将实际的 <code>ShoppingCart</code> <em>Bean</em> 注入到目标中，而是注入到 <code>ShoppingCart</code> <em>Bean</em> 代理中，该代理对外暴露与 <code>ShoppingCart</code> 相同的方法。<br></p><p>如果 <code>ShoppingCart</code> 是一个具体类，就必须使用 <em>CGLib</em> 来生成基于类的代理；需要将 <code>proxyMode</code> 设置为 <code>ScopedProxyMode.TARGET_CLASS</code>。<br></p><p><strong>在 XML 中声明作用域代理</strong></p><div class="language-xml ext-xml line-numbers-mode"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>bean</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>cart<span class="token punctuation">&quot;</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>com.myapp.ShoppingCart<span class="token punctuation">&quot;</span></span> <span class="token attr-name">scope</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>session<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token namespace">aop:</span>scoped-proxy</span><span class="token punctuation">/&gt;</span></span> \n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>bean</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>默认情况下，它会使用 CGLib 创建目标类的代理。 但是也可以将 <code>proxy-target-class</code> 属性设置为 <code>false</code>， 进而要求它生成基于接口的代理</p><h3 id="_2-5-运行时值注入" tabindex="-1"><a class="header-anchor" href="#_2-5-运行时值注入" aria-hidden="true">#</a> #2.5 运行时值注入</h3><h4 id="_2-5-1-注入外部值" tabindex="-1"><a class="header-anchor" href="#_2-5-1-注入外部值" aria-hidden="true">#</a> ##2.5.1 注入外部值</h4><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token annotation punctuation">@Configuration</span>\n<span class="token annotation punctuation">@PropertySource</span><span class="token punctuation">(</span><span class="token string">&quot;classpath:app.properties&quot;</span><span class="token punctuation">)</span>\n<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ExpressiveConfig</span> <span class="token punctuation">{</span>\n\n    <span class="token annotation punctuation">@Autowired</span>\n    <span class="token class-name">Environment</span> env<span class="token punctuation">;</span>\n\n    <span class="token keyword">public</span> <span class="token class-name">BlankDisc</span> <span class="token function">disk</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">BlankDisc</span><span class="token punctuation">(</span>env<span class="token punctuation">.</span><span class="token function">getProperty</span><span class="token punctuation">(</span><span class="token string">&quot;disc.title&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> env<span class="token punctuation">.</span><span class="token function">getProperty</span><span class="token punctuation">(</span><span class="token string">&quot;disc.artist&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><p><strong>Spring 的 Environment</strong></p><p><code>Environment</code> 的 <code>getProperty()</code> 有四种重载形式</p><ul><li><code>String getProperty(String key)</code></li><li><code>String getProperty(String key, String defaultValue)</code> 当目标值不存在时 <code>defaultValue</code> 为默认值</li><li><code>T getProperty(String key, Class&lt; T&gt; type)</code></li><li><code>T getProperty(String key, Class&lt; T&gt; type, T defaultValue)</code></li></ul><p>使用 <code>getRequiredProperty()</code> 目标属性必须存在，不能为空</p><ul><li><code>containsProperty()</code> 判断属性是否存在</li><li><code>getPropertyAsClass()</code> 将属性解析为类，例：<code>Class&lt;CompactDisc&gt; cdClass = env.getPropertyAsClass(&quot;disc.class&quot;, CompactDisc.class);</code></li></ul><p><strong>解析属性占位符</strong></p><p>使用 <code>${...}</code> 包装属性名称</p><p>在 XML 配置文件中</p><div class="language-xml ext-xml line-numbers-mode"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>bean</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>blankDisc<span class="token punctuation">&quot;</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>com.exercise.test.jms.BlankDisc<span class="token punctuation">&quot;</span></span> <span class="token attr-name"><span class="token namespace">c:</span>artist</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>${disc.title}<span class="token punctuation">&quot;</span></span> <span class="token attr-name"><span class="token namespace">c:</span>title</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>${disc.artist}<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>在 JavaConfig 中</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">BlankDisc</span> <span class="token punctuation">{</span>\n\n    <span class="token keyword">private</span> <span class="token class-name">String</span> title<span class="token punctuation">;</span>\n    <span class="token keyword">private</span> <span class="token class-name">String</span> artist<span class="token punctuation">;</span>\n\n    <span class="token keyword">public</span> <span class="token class-name">BlankDisc</span><span class="token punctuation">(</span><span class="token annotation punctuation">@Value</span><span class="token punctuation">(</span><span class="token string">&quot;${disc.artist}&quot;</span><span class="token punctuation">)</span> <span class="token class-name">String</span> title<span class="token punctuation">,</span> <span class="token annotation punctuation">@Value</span><span class="token punctuation">(</span><span class="token string">&quot;${disc.title}&quot;</span><span class="token punctuation">)</span> <span class="token class-name">String</span> artist<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">this</span><span class="token punctuation">.</span>title <span class="token operator">=</span> title<span class="token punctuation">;</span>\n        <span class="token keyword">this</span><span class="token punctuation">.</span>artist <span class="token operator">=</span> artist<span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><p>要使用占位符，需要配置 <code>PropertySourcesPlaceholderConfigurer</code> <em>Bean</em></p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token annotation punctuation">@Bean</span> \n<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">PropertySourcesPlaceholderConfigurer</span> <span class="token function">placeholderConfigurer</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> \n    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">PropertySourcesPlaceholderConfigurer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> \n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><div class="language-xml ext-xml line-numbers-mode"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token namespace">context:</span>property-placeholder</span><span class="token punctuation">/&gt;</span></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h4 id="_2-5-2-使用-spring-表达式语言进行装配" tabindex="-1"><a class="header-anchor" href="#_2-5-2-使用-spring-表达式语言进行装配" aria-hidden="true">#</a> ##2.5.2 使用 Spring 表达式语言进行装配</h4><p>使用 Spring 表达式语言（Spring Expression Language， SpEL），需将表达式放入 <code>#{...}</code> 中；</p><p><strong>表示字面值</strong></p><ul><li><code>#{3.14159}</code> 浮点值</li><li><code>#{9.87E4}</code> 科学记数法</li><li><code>#{&#39;Hello&#39;}</code> 字符串</li><li><code>#{false}</code> 布尔值</li></ul><p><strong>引用 <em>Bean</em>、属性和方法</strong></p><ul><li><code>#{sgtPeppers}</code> <em>Bean</em> id</li><li><code>#{sgtPeppers.artist}</code> <em>Bean</em> 属性</li><li><code>#{artistSelector.selectArtist()}</code> <em>Bean</em> 方法</li></ul><p><strong>表达式使用类型</strong></p><ul><li><code>#{T(System).currentTimeMillis()}</code></li><li><code>#{T(java.lang.Math).PI}</code></li></ul><p><strong>计算正则表达式</strong></p><p><code>#{admin.email matches &#39;[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\\\.com&#39;}</code></p><p><strong>计算集合</strong></p><ul><li><code>#{jukebox.songs[4].title}</code> 其中 <code>jukebox</code> 为 <em>Bean</em> ID</li><li><code>#{jukebox.songs[T(java.lang.Math).random()*jukebox.songs.size()].title}</code> 随机选择</li></ul><p>使用查询运算符（<code>.?[]</code>），例：<code>#{jukebox.songs.?[artist eq &#39;Aerosmith&#39;]}</code> 得到 Aerosmith 所有歌曲<br></p><p><code>.^[]</code> 和 <code>.$[]</code>，用来在集合中查询第一个匹配项和最后一个匹配项<br></p><p><code>.![]</code> 投影运算符，会从集合的每个成员中选择特定的属性放到另外一个集合中</p><ul><li><code>#{jukebox.songs.![title]}</code> 将 <code>title</code> 属性投影到一个新的 <code>String</code> 类型的集合中</li><li><code>#{jukebox.songs.?[artist eq &#39;Aerosmith&#39;].![title]}</code> 获得 Aerosmith 所有歌曲的名称列表</li></ul>',160),p={},e=(0,s(744).Z)(p,[["render",function(n,a){return t}]])},744:(n,a)=>{a.Z=(n,a)=>{const s=n.__vccOpts||n;for(const[n,t]of a)s[n]=t;return s}}}]);